{"version":3,"sources":["components/About.js","components/Home.js","components/Play.js","components/ShopType.js","components/Shop.js","components/Pay.js","App.js","serviceWorker.js","index.js"],"names":["About","props","pageType","state","was","updateType","Fragment","this","pageFrom","React","Component","Home","to","className","Play","isAnimate","content","style","marginLeft","ShopType","item_list","data","map","item","key","renderList","params","color","src","image","alt","title_big","title","price","href","Shop","url","id","match","path","vip","start","withRouter","Pay","confirmRules","action","type","placeholder","disabled","checked","onChange","bind","setState","App","animCount","prevOffset","scrolProcess","indexFrom","headerClass","animClass","bgTr","hasScroll","document","getElementById","getElementsByClassName","exact","fromHomePage","noUpdate","scrollTop","window","pageYOffset","th","addEventListener","handleScroll","removeEventListener","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d30a3084.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class About extends React.Component{\r\n\r\n    pageType = 'about';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            was: props['pageType']\r\n        }\r\n\r\n        this.updateType()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <h1>О нас</h1>\r\n                    <p>Мы команда людей, которая создает проект, позволяющий человеку стать кем он хочет, опробовав на себе какую-то роль. Делая этот проект на базе игры от знаменитой компании Rockstar - Grand Theft Auto 5. Наша команда делает проект, который изменит представление о том, какие РП-проекты должны быть, создавая реальную возможность увидеть последствия своих действий на жизни других людей и целого штата в частности.</p>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n\r\n    updateType() {\r\n        this.props.updateType({pageType: this.pageType, pageFrom: this.state.was})\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport default class Home extends React.Component{\r\n\r\n    pageType = 'home';\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            was: props['pageType']\r\n        }\r\n        if(!props['noUpdate'])\r\n            this.updateType()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <NavLink to=\"/play\" >\r\n                    <div className=\"play-icon play-ab\">\r\n                        <div className=\"play-icon-big\"></div>\r\n                        <div className=\"play-icon-middle\"></div>\r\n                        <div className=\"play-icon-small play-icon-tr-1 main\"></div>\r\n                        <div className=\"play-icon-small play-icon-tr-2 alt \"></div>\r\n                        <div className=\"play-icon-small play-icon-tr-3 alt \"></div>\r\n                    </div>\r\n                </NavLink>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    updateType() {\r\n        this.props.updateType({pageType: this.pageType, pageFrom: this.state.was})\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport default class Play extends React.Component{\r\n    pageType = 'play';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            was: props['pageType'],\r\n            isAnimate: true\r\n        }\r\n\r\n        this.updateType()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.content()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    content(){\r\n        return (\r\n            <div>\r\n                <div className=\"play__bg-tr num-1 set-visible\"></div>\r\n                <div className=\"play__bg-tr num-2 set-visible\"></div>\r\n                <div className=\"play__bg-tr num-3 set-visible\"></div>\r\n                <div className=\"play set-visible\" >\r\n                    <div className=\"play__item play__item-1\">\r\n                        <div className=\"play__item-num\">1</div>\r\n                        <div className=\"play__item-data\">\r\n                            <h3>Шаг первый</h3>\r\n                            <p>Скачайте оригинальную GTA 5</p>\r\n                            <button className=\"btn\">Тык</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"play__item play__item-2\">\r\n                        <div className=\"play__item-data\">\r\n                            <h3>Шаг второй</h3>\r\n                            <p>Установите ALT:V</p>\r\n                            <button className=\"btn btn--fixed\">Клик</button>\r\n                        </div>\r\n\r\n                        <div className=\"play__item-num\" style={{marginLeft: '40px'}}>2</div>\r\n                    </div>\r\n                    <div className=\"play__item play__item-3\">\r\n                        <div className=\"play__item-num\">3</div>\r\n                        <div className=\"play__item-data\" style={{marginLeft: '30px'}}>\r\n                            <h3>Шаг первый</h3>\r\n                            <p>Найдите NEST в списке серверов</p>\r\n                            <button className=\"btn btn--fixed\">Конект</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    updateType() {\r\n        this.props.updateType({pageType: this.pageType, pageFrom: this.state.was})\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport default class ShopType extends React.Component {\r\n\r\n    render() {\r\n\r\n\r\n        const item_list = this.props.data.map((item, key) => this.renderList(item, key))\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {item_list}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    renderList(data, key){\r\n        const params = data.params.map((item, key) =><li key={key}>{item}</li>)\r\n\r\n        return (\r\n            <div key={key} className={`shop__item shop__item-${data.color}`}>\r\n                <div className=\"shop__item-image\">\r\n                    <img src={`/static/img/content/${data.image}`} alt=\"\" />\r\n                </div>\r\n                <div className=\"shop__item-data\">\r\n                    <div className=\"shop__item-title gradient\"><b>{data.title_big}</b> {data.title}</div>\r\n                    <ul className=\"shop__item-params\">{params}</ul>\r\n                    <div className=\"shop__item-bottom\">\r\n                        <div className=\"shop__item-price  gradient\">{data.price} RUB</div>\r\n                        <a href=\"/\" className=\"btn\">Купить</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport {NavLink, Route, withRouter} from \"react-router-dom\";\r\nimport ShopType from \"./ShopType\";\r\n\r\nclass Shop extends React.Component{\r\n    pageType = 'shop';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            was: props['pageType']\r\n        }\r\n        this.url = props['url']\r\n        this.updateType()\r\n    }\r\n\r\n    render() {\r\n        let id = this.props.match.params.id\r\n        // console.log(this.data(), id)\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"shop__submenu-wrapper\">\r\n                    <div className=\"shop__submenu\">\r\n                        <ul className=\"menu\">\r\n                            <li><NavLink to={`/shop/vip`} >Набор VIP</NavLink></li>\r\n                            <li><NavLink to={`/shop/start`}>Стартовые наборы</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className={\"container content-data content shop-content\"} id=\"scroll-container\">\r\n                    <div className={\"container--small\"} >\r\n                        <h1 className=\"title-medium\">Магазин</h1>\r\n                        <div className=\"shop\">\r\n\r\n                            <Route path=\"/shop/:id\">\r\n                                <ShopType data={this.data()[id]} />\r\n                            </Route>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    data(){\r\n        return {\r\n            vip:[\r\n                {\r\n                    image: 'snares.png',\r\n                    title_big: 'VIP',\r\n                    title: 'SNARES PENGUIN',\r\n                    params: [\r\n                        'PAYDAY $300',\r\n                        'Продажа имущества в гос 75%',\r\n                        'Скидка в VIP магазине 1%',\r\n                        'Лимит несткоинов в день 130',\r\n                        'Кейс Snares penguin x1',\r\n                    ],\r\n                    price: 350,\r\n                    color: 'white',\r\n                },\r\n                {\r\n                    image: 'king.png',\r\n                    title_big: 'VIP',\r\n                    title: 'KING PENGUIN',\r\n                    params: [\r\n                        'PAYDAY $500',\r\n                        'Продажа имущества в гос 80%',\r\n                        'Скидка в VIP магазине 2%',\r\n                        'Скидка на апгрейд бизнеса 5%',\r\n                        'Снижение % ставки кредита в банке на 2%',\r\n                        'Лимит несткоинов в день 150',\r\n                        'Кейс Snares penguin x2',\r\n                        'Кейс King penguin x1',\r\n                    ],\r\n                    price: 600,\r\n                    color: 'gold'\r\n                },\r\n                {\r\n                    image: 'emperor.png',\r\n                    title_big: 'VIP',\r\n                    title: 'EMPEROR PENGUIN',\r\n                    params: [\r\n                        'PAYDAY $900',\r\n                        'Продажа имущества в гос 85%',\r\n                        'Скидка в VIP магазине 3%',\r\n                        'Скидка на апгрейд бизнеса 7%',\r\n                        'Снижение % ставки кредита в банке на 3%',\r\n                        'Лимит несткоинов в день 180',\r\n                        'Кейс Snares penguin x3',\r\n                        'Кейс King penguin x2',\r\n                        'Кейс Emperor penguin x1',\r\n                    ],\r\n                    price: 1200,\r\n                    color: 'orange',\r\n                },\r\n\r\n            ],\r\n            start:[\r\n                {\r\n                    image: 'adelie.png',\r\n                    title_big: 'ADELIE',\r\n                    title: 'PENGUIN',\r\n                    params: [\r\n                        'Игровая валюта 99 800',\r\n                        'Nestcoin 100',\r\n                        'VIP Snares penguin на 7 дней',\r\n                        'FOCUS 2003',\r\n                    ],\r\n                    price: 499,\r\n                    color: 'white',\r\n                },\r\n                {\r\n                    image: 'magellanic.png',\r\n                    title_big: 'MAGELLANIC',\r\n                    title: 'PENGUIN',\r\n                    params: [\r\n                        'Игровая валюта 300 000',\r\n                        'Nestcoin 400',\r\n                        'VIP King penguin на 15 дней',\r\n                        'Subaru WRX',\r\n                    ],\r\n                    price: 1500,\r\n                    color: 'white',\r\n                },\r\n                {\r\n                    image: 'humboldt.png',\r\n                    title_big: 'HUMBOLDT',\r\n                    title: 'PENGUIN',\r\n                    params: [\r\n                        'Игровая валюта 580 000',\r\n                        'Nestcoin 900',\r\n                        'VIP Emperor penguin на 30 дней',\r\n                        'AUDI SQ7',\r\n                    ],\r\n                    price: 2900,\r\n                    color: 'green',\r\n                },\r\n                {\r\n                    image: 'royal.png',\r\n                    title_big: 'ROYAL',\r\n                    title: 'PENGUIN',\r\n                    params: [\r\n                        'Игровая валюта 1 000 000',\r\n                        'Nestcoin 1700',\r\n                        'VIP Emperor penguin на 60 дней',\r\n                        'AUDI SQ7, Lamborghini Hurracan Performante',\r\n                    ],\r\n                    price: 5000,\r\n                    color: 'orange',\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n    updateType() {\r\n        this.props.updateType({pageType: this.pageType, pageFrom: this.state.was})\r\n    }\r\n}\r\n\r\nexport default withRouter(Shop)\r\n","import React from \"react\";\r\n\r\nexport default class Pay extends React.Component{\r\n\r\n    pageType = 'about';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            was: props['pageType'],\r\n            confirmRules: false\r\n        }\r\n\r\n        this.updateType()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"pay\">\r\n                    <h1 className=\"title-small\">Пополнение счета</h1>\r\n                    <form action=\"post\">\r\n                        <div className=\"field-row\">\r\n                            <input type=\"text\" placeholder=\"Логин в игре\"/>\r\n                        </div>\r\n                        <div className=\"field-row\">\r\n                            <input type=\"text\" placeholder=\"Электронная почта\"/>\r\n                        </div>\r\n                        <div className=\"field-row\">\r\n                            <input type=\"text\" placeholder=\"Сумма\"/>\r\n                        </div>\r\n                        <div className=\"pay__note\">\r\n                            Курс <a href=\"/\">Nestcoin</a> 1 Руб. = $100 (Игровой валюты)\r\n                        </div>\r\n\r\n                        <button className=\"btn\" disabled={!this.state.confirmRules}>Пополнить</button>\r\n\r\n                        <div className=\"field-row pay__confirm\">\r\n                            <label>\r\n                                <input type=\"checkbox\" checked={this.state.confirmRules} onChange={this.onChange.bind(this)}/>\r\n                                Я согласен на обработку моих <a href=\"/\">персональных данных</a>\r\n                            </label>\r\n\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    onChange(){\r\n        this.setState({\r\n            confirmRules: !this.state.confirmRules\r\n        })\r\n    }\r\n\r\n    updateType() {\r\n        this.props.updateType({pageType: this.pageType, pageFrom: this.state.was})\r\n    }\r\n}\r\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink,\n} from \"react-router-dom\";\n\nimport ScrollArea from 'react-scrollbar';\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\nimport About from \"./components/About\";\nimport Home from \"./components/Home\";\nimport Play from \"./components/Play\";\nimport Shop from \"./components/Shop\";\nimport Pay from \"./components/Pay\";\n\nexport default class App extends React.Component{\n\n    animCount = 0\n    prevOffset = 0;\n    scrolProcess = false\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pageType: null,\n            pageFrom: null,\n            indexFrom: 0,\n            headerClass: '',\n        }\n    }\n\n\n    render(){\n        let pageType = this.state.pageType;\n        let pageFrom = this.state.pageFrom;\n\n        let animClass = '';\n\n        if(pageType === 'home' && pageFrom === 'play')\n            animClass = 'fromPlayToHome'\n        else if(pageType === 'play' && pageFrom === 'home')\n            animClass = 'fromHomeToPlay'\n        else if(pageType === 'home' && (pageFrom !== 'play' && pageFrom === null))\n            animClass = 'homePage'\n        else if(pageType === 'play' && (pageFrom !== 'home' && pageFrom === null))\n            animClass = 'playPage'\n        else if(pageType === 'play' && pageFrom !== 'home' )\n            animClass = 'playPage from-' + this.state.indexFrom % 3\n        else if(pageType === 'home' && pageFrom !== 'play' )\n            animClass = 'homePage from-' + this.state.indexFrom % 3\n        else if(pageFrom === 'home')\n            animClass = 'fromHome'\n        else if(pageFrom === 'play' || this.animCount !== 0)\n            animClass = 'moveSide-'+(this.animCount % 3)\n\n\n        let bgTr = (\n            <div className=\"bg__tr\">\n                <div className={\"bg__tr-1\"}></div>\n                <div className={\"bg__tr-2\"}></div>\n            </div>\n        );\n\n        let hasScroll = pageType !== 'home' && pageType !== 'play' && pageType !== 'pay';\n\n        let header = document.getElementById('header');\n        let content = document.getElementsByClassName('content')[0];\n\n        return (\n            <section className={\"page__wrapper \" + animClass + (pageType === 'shop' ? ' shop-page': '') +(' '+this.state.headerClass)}>\n                <Router>\n                    <div className={'header-wrapper '}>\n                        <header className=\"header container\" id=\"header\">\n                            <div className=\"logo\">\n                                <NavLink exact to=\"/\">\n                                    <img src=\"/static/img/general/logo.png\" alt=\"\"/>\n                                    <span><b>NEST</b> ROLE PLAY</span>\n                                </NavLink>\n                            </div>\n\n                            <ul className=\"menu\">\n                                <li>\n                                    <NavLink to=\"/about\">О нас</NavLink>\n                                </li>\n                                <li>\n                                    <NavLink to=\"/play\">Играть</NavLink>\n                                </li>\n                                <li>\n                                    <a href=\"/\">Форум</a>\n                                </li>\n                                <li>\n                                    <NavLink to=\"/shop/vip\">Магазин</NavLink>\n                                </li>\n                                <li>\n                                    <NavLink to=\"/pay\">Пополнение счета</NavLink>\n                                </li>\n                            </ul>\n\n                            <ul className=\"social\">\n                                <li>\n                                    <a href=\"/\">\n                                        <img src=\"/static/img/general/discord.svg\" alt=\"\" />\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"/\">\n                                        <img src=\"/static/img/general/vk.svg\" alt=\"\" />\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"/\">\n                                        <img src=\"/static/img/general/youtube.svg\" alt=\"\" />\n                                    </a>\n                                </li>\n                            </ul>\n                        </header>\n                    </div>\n\n                    <div className=\"container--small\">\n                        {animClass === 'fromHome' ? this.fromHomePage(pageType) : null}\n                        {pageType !== 'home' || pageType !== 'play' ?  bgTr : null}\n                    </div>\n                    <Switch>\n                        <Route path=\"/pay\">\n                            <div className={\"container content-data content\" }>\n                                <div className={\"container--small\"} >\n                                    <Pay pageType={pageType} updateType={this.updateType.bind(this)}/>\n                                </div>\n                            </div>\n                        </Route>\n                        <Route path=\"/shop/:id\">\n                            <Shop pageType={pageType} updateType={this.updateType.bind(this)}/>\n                        </Route>\n                        <Route path=\"/about\">\n                            <SimpleBar className={\"container content-data content\"} >\n                                <div className={\"container--small\"} >\n                                    <About pageType={pageType} updateType={this.updateType.bind(this)}/>\n                                </div>\n                            </SimpleBar>\n                        </Route>\n                        <Route path=\"/play\">\n                            <div className={\"container content-data \" + (hasScroll ? ' content' : '')}>\n                                <div className={\"container--small\"} >\n                                    <Home  pageType={pageType} updateType={this.updateType.bind(this)}/>\n                                    <Play  pageType={pageType} updateType={this.updateType.bind(this)}/>\n                                </div>\n                            </div>\n                        </Route>\n                        <Route path=\"/\">\n                            <div className={\"container content-data \"}>\n                                <div className={\"container--small\"} >\n                                    <Play  pageType={pageType} updateType={this.updateType.bind(this)}/>\n                                    <Home  pageType={pageType} updateType={this.updateType.bind(this)}/>\n                                </div>\n                            </div>\n                        </Route>\n                    </Switch>\n                </Router>\n            </section>\n        );\n    }\n\n    fromHomePage(){\n        return (\n            <div className=\"play-alt\">\n                <Home noUpdate={true}/>\n            </div>\n        );\n    }\n\n    handleScroll(){\n        let scrollTop = window.pageYOffset\n        let th = this\n        if(th.prevOffset < 50)\n            th.setState({headerClass: 'nav-top'})\n        else if(th.prevOffset < scrollTop)\n            th.setState({headerClass: 'nav-hide'})\n        else\n            th.setState({headerClass: 'nav-show'})\n\n        this.prevOffset = scrollTop;\n    }\n\n    updateType(data){\n        if(data.pageType === 'play')\n            this.animCount = 0\n        else if(data.pageType === 'home')\n            this.animCount = 2\n        else{\n            this.animCount += 1\n            this.state.indexFrom = this.animCount % 3\n        }\n\n        this.setState({pageType: data.pageType, pageFrom: data.pageFrom})\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll.bind(this), true);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll.bind(this));\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}